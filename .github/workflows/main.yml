name: Workflow


on:
  workflow_dispatch:
  push:
    branches:
      - master
      - dev
    tags:
      - v*.*.*


permissions:
  contents: write
  discussions: write


concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref_type }}
  cancel-in-progress: true

env:
  CCACHE_DIR: /ccache

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      tag_abbrev: ${{ steps.describe.outputs.tag_abbrev }}
      tag_offset: ${{ steps.describe.outputs.tag_offset }}
      sha_short: ${{ steps.describe.outputs.sha_short }}
      full_desc: ${{ steps.describe.outputs.full_desc }}
      branch: ${{ steps.describe.outputs.branch }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
    - name: Describe
      id: describe
      shell: bash
      run: |
        git fetch origin +refs/tags/*:refs/tags/*
        tag_abbrev=$(git tag --sort=v:refname | grep -oE "(^v[0-9]+\.[0-9]+(.[0-9]+)?)$" | tail -1)
        echo "tag_abbrev=$tag_abbrev" >> $GITHUB_OUTPUT
        echo "tag_offset=$(git rev-list $tag_abbrev..HEAD --count)" >> $GITHUB_OUTPUT
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "full_desc=$(git describe --long --tags)" >> $GITHUB_OUTPUT
        echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
    needs: version
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
    - name: Dependencies
      shell: bash
      run: |
        pacman -Syu --noconfirm
        pacman -S --noconfirm cmake python musl meson git ccache
        mkdir ${{ env.CCACHE_DIR }}
    - name: ccache
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.CCACHE_DIR }}
        key: ccache-${{ github.workflow }}-${{ github.run_id }}
        restore-keys: |
          ccache-${{ github.workflow }}-
    - name: Cache build-time dependencies
      uses: actions/cache@v4
      with:
        path: |
          ./deps/yawl
        key: deps-${{ github.workflow }}-${{ hashFiles('configure.ac') }}
        restore-keys: |
          deps-${{ github.workflow }}-${{ hashFiles('configure.ac') }}
    - name: Configure
      shell: bash
      run: |
        ./autogen.sh
        ./configure
    - name: Build
      shell: bash
      run: |
        make
    - uses: actions/upload-artifact@v4
      with:
        path: yawl
        name: yawl-${{ needs.version.outputs.full_desc }}

  release:
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    name: Release
    runs-on: ubuntu-latest
    needs: [version, build]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
    - uses: actions/download-artifact@v4
      with:
        name: yawl-${{ needs.version.outputs.full_desc }}
        path: yawl-${{ needs.version.outputs.full_desc }}
    - name: Prepare
      id: prepare
      shell: bash
      run: |
        git fetch origin +refs/tags/*:refs/tags/*
    - name: Create
      id: create
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        gh
        release create
        ${{ github.ref_name }}
        --latest
        --title "Version ${{ github.ref_name }}"
        --notes-from-tag
        --verify-tag
    - name: Upload
      id: upload
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        gh
        --repo "${{ github.server_url }}/${{ github.repository }}"
        release upload
        ${{ github.ref_name }}
        yawl-${{ needs.version.outputs.full_desc }}/yawl
        --clobber
